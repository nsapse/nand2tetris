// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=R0Load, b=R1Load, c=R2Load, d=R3Load);
    Mux4Way16(out=out, sel=address[12..13], a=R0Out, b=R1Out, c=R2Out, d=R3Out);
    RAM4K(in=in, out=R0Out, load=R0Load, address=address[0..11]);
    RAM4K(in=in, out=R1Out, load=R1Load, address=address[0..11]);
    RAM4K(in=in, out=R2Out, load=R2Load, address=address[0..11]);
    RAM4K(in=in, out=R3Out, load=R3Load, address=address[0..11]);
}
